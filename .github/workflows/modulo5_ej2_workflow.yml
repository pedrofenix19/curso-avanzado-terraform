name: "Despliegue de ejercicio práctico"

on:
  push:
    paths:
      - 'modulo5/ej2/**'
    branches:
      - dev
      - master
    
env:
  AWS_REGION: 'us-east-1'
  AWS_ACCESS_KEY_ID: '${{ secrets.AWS_ACCESS_KEY_ID }}'
  AWS_SECRET_ACCESS_KEY: '${{ secrets.AWS_SECRETS_ACCESS_KEY }}'

jobs:
  terraform :
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./modulo5/ej2
    steps: 
      - name: clone_repo
        uses: actions/checkout@v3

      - name: install_terraform
        uses: hashicorp/setup-terraform@v3
        with: 
          terraform_version: "1.9.6"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Check Deployment Status
        id: check_status
        run: |
          echo "¿Ha habido un despliegue? : ${{ secrets.HAS_BEEN_DEPLOYED }}"
          if [ "${{ secrets.HAS_BEEN_DEPLOYED }}" == "true" ]; then
            echo "No es el primer despliegue."
            echo "is_first_deployment=false" >> $GITHUB_ENV
          else
            echo "Es el primer despliegue."
            echo "is_first_deployment=true" >> $GITHUB_ENV

      - name: terraform_init
        run: |
          terraform init

      - name: run tests
        run: |
          terraform test

      - name: terraform_plan
        run: |
          if [ "${{ env.is_first_deployment }}" == "true" ]; then
            terraform plan -target=module.ec2_instances -var-file terraform.tfvars
          else
            terraform plan -var-file terraform.tfvars
          fi

          
      - name: terraform_apply
        run: |
          if [ "${{ env.is_first_deployment }}" == "true" ]; then
            terraform apply -target=module.ec2_instances -var-file terraform.tfvars -auto-approve
          else
            terraform apply -var-file terraform.tfvars -auto-approve 
          fi

      - name: Update Deployment Status
        if: steps.check_status.outputs.is_first_deployment == 'true'
        run: |
          echo "Actualizando estado del primer despliegue..."
          echo "HAS_BEEN_DEPLOYED=true" | gh secret set HAS_BEEN_DEPLOYED

  