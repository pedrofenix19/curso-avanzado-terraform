pipeline {
    agent any

    environment {
        AWS_CREDENTIALS_ID = 'aws-credentials-id'
        TERRAFORM_VERSION = '1.9.6'
    }

    parameters {
        choice(name: 'ENVIRONMENT', choices: ['dev', 'staging', 'prod'], description: 'Selecciona el entorno de despliegue')
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/pedrofenix19/curso-avanzado-terraform.git'
            }
        }

        stage('Terraform Init') {
            steps {
                script {
                    sh "terraform init -backend-config=${params.ENVIRONMENT}.tfbackend"
                }
            }
        }

        stage('Terraform Validate') {
            steps {
                script {
                    sh "terraform validate"
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                script {
                    sh "terraform plan -var-file=${params.ENVIRONMENT}.tfvars -out=tfplan"
                }
            }
        }

        stage('Aprobación para Despliegue en Producción') {
            when {
                expression {
                    params.ENVIRONMENT == 'prod'
                }
            }
            steps {
                input message: '¿Deseas aplicar los cambios en producción?', ok: 'Desplegar'
            }
        }

        stage('Terraform Apply') {
            steps {
                script {
                    sh "terraform apply tfplan"
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo '¡Despliegue exitoso!'
        }
        failure {
            echo 'El despliegue ha fallado.'
        }
    }
}
